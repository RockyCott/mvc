"""empty message

Revision ID: 4aaf62ca03c2
Revises: 9b81a79b35ba
Create Date: 2021-06-02 17:31:00.153151

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import schema
from sqlalchemy.dialects import postgresql
from uuid import uuid4
from sqlalchemy.sql.expression import column, table

# revision identifiers, used by Alembic.
revision = '4aaf62ca03c2'
down_revision = '9b81a79b35ba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # drop user_id primary key constraint, using 'CASCADE' to also delete foreign key constraints
    op.execute('ALTER TABLE users_info.user DROP CONSTRAINT user_pkey CASCADE')
    op.execute('ALTER TABLE users_info.user DROP COLUMN id')


    # adding id column with uuid type
    op.add_column(column = sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False, default=uuid4), schema='users_info', table_name='user')  
    #op.alter_column('users_info.user', 'id', existing_type=uuid4, type_=uuid4)
    #op.alter_column('user', 'id', nullable=False, schema='users_info')

    # adding id column with uuid type for relations
    op.add_column(column = sa.Column('id_creator', postgresql.UUID(as_uuid=True), nullable=False), schema='communities', table_name='community') 
    op.add_column(column = sa.Column('id_author', postgresql.UUID(as_uuid=True), nullable=False), schema='communities', table_name='post') 
    op.add_column(column = sa.Column('id_author', postgresql.UUID(as_uuid=True), nullable=False), schema='communities', table_name='comment') 
    #op.alter_column(schema='users_info', table_name='user', column_name='id', existing_type=sa.Integer, type_=postgresql.UUID(as_uuid=True), postgresql_using='id::uuid')
    """
    op.alter_column('communities.community', 'creator_id', existing_type=sa.Integer, type_=postgresql.UUID(as_uuid=True))
    op.alter_column('communities.post', 'author_id', existing_type=sa.Integer, type_=postgresql.UUID(as_uuid=True))
    op.alter_column('communities.comment', 'author_id', existing_type=sa.Integer, type_=postgresql.UUID(as_uuid=True))
    """
    # creating primary key constraint
    op.create_primary_key('user_pkey', 'user',  ['id'], schema='users_info')

    # creating foreign key constraint 
    op.create_foreign_key('fk_community_creator_id', 'community', 'user', ['id_creator'], ['id'], source_schema='communities', referent_schema='users_info')
    op.create_foreign_key('fk_post_author_id', 'post', 'user', ['id_author'], ['id'], source_schema='communities', referent_schema='users_info')
    op.create_foreign_key('fk_comment_author_id', 'comment', 'user', ['id_author'], ['id'], source_schema='communities', referent_schema='users_info')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    """
    op.drop_table('comment', schema='communities')
    op.drop_table('post', schema='communities')
    op.drop_table('community', schema='communities')
    op.drop_table('user', schema='users_info')
    # ### end Alembic commands ###
    """

